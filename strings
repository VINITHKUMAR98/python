CHARS = 256
  
def max_distinct_char(str1, n): 
    count1 = [0] * CHARS
    for i in range(n): 
        count1[ord(str1[i])] += 1
      
    m_distinct = 0
    for i in range(CHARS): 
        if (count1[i] != 0): 
            m_distinct += 1    
      
    return m_distinct 
  
def smallesteSubstr_maxDistictChar(str1): 
  
    n1 = len(str1)
    max_distinct = max_distinct_char(str1, n1) 
    minl = n1    
    for i in range(n1): 
        for j in range(n1): 
            subs = str1[i:j] 
            subs_lenght = len(subs) 
            sub_distinct_char = max_distinct_char(subs,  
                                                  subs_lenght) 
            if (subs_lenght < minl and 
                max_distinct == sub_distinct_char): 
                minl = subs_lenght 
  
    return minl 
  
if __name__ == "__main__": 
      
    str1 = str(input())
      
    l = smallesteSubstr_maxDistictChar(str1); 
    print(l) 


  
